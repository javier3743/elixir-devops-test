name: 'Destroy'

on:
  workflow_dispatch:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra/terraform
    env: 
      TF_VAR_region:            ${{ secrets.TF_VAR_region }}
      TF_VAR_backend_bucket:    ${{ secrets.TF_VAR_backend_bucket }}
      TF_VAR_backend_key_table: ${{ secrets.TF_VAR_backend_key_table }}
      AWS_ACCESS_KEY_ID:        ${{ secrets.TF_AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY:    ${{ secrets.TF_AWS_SECRET_KEY}}
      SECRET_KEY_BASE:          ${{ secrets.SECRET_KEY_BASE }}
      TF_VAR_db_username:       ${{ secrets.TF_VAR_db_username }}
      TF_VAR_db_password:       ${{ secrets.TF_VAR_db_password }}
      TF_VAR_db_name:           ${{ secrets.TF_VAR_db_name }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Create backend configuration
      run: |
        cat << EOF > backend.tf
        terraform {
          backend "s3" {
            bucket         = "${{ secrets.TF_VAR_backend_bucket }}"
            key            = "terraform.tfstate"
            region         = "${{ secrets.TF_VAR_region }}"
            dynamodb_table = "${{ secrets.TF_VAR_backend_key_table }}"
            encrypt        = true
          }
        }
        EOF

    - name: Terraform Init
      run: terraform init
      env:
        AWS_ACCESS_KEY_ID:        ${{ secrets.TF_AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY:    ${{ secrets.TF_AWS_SECRET_KEY}}
    
    - name: Terraform Destroy
      run: terraform destroy -auto-approve
      env:
        AWS_ACCESS_KEY_ID:        ${{ secrets.TF_AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY:    ${{ secrets.TF_AWS_SECRET_KEY}}
